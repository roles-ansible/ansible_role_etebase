---
- name: Run python3 manage.py migrate
  become: true
  ansible.builtin.command:
    chdir: "{{ etebase__user_home }}/etebase_{{ etebase_version_target }}"
    cmd: "{{ etebase__venv }}/bin/python3 ./manage.py migrate"
  changed_when: _etebase_download.changed or _etebase_config.changed
  register: _etebase_migrate

- name: Print output of python3 manage.py migrate
  ansible.builtin.debug:
    verbosity: 1
    msg: "{{ _etebase_migrate.stdout }}"

- name: Create static files
  become: true
  ansible.builtin.command:
    chdir: "{{ etebase__user_home }}/etebase_{{ etebase_version_target }}"
    cmd: "{{ etebase__venv }}/bin/python3 ./manage.py collectstatic"
    creates: "{{ etebase__global_static_root }}/admin"
  register: _etebase_collectstatic
  notify:
    - "Systemctl restart etebase.service"
    - "Systemctl restart webserver"

- name: Print output of python3 manage.py collectstatic
  ansible.builtin.debug:
    verbosity: 1
    msg: "{{ _etebase_collectstatic.stdout }}"

- name: "Fix File Permissions for secret directory"
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    group: "{{ etebase__group }}"
    owner: "{{ etebase__user }}"
    recurse: true
    mode: 'u=rwX,g=rX,o='
  with_items:
    - "{{ etebase__secrets_dir }}"

- name: "Fix File Permissions for static data directory"
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    group: "{{ etebase__group }}"
    owner: "{{ etebase__user }}"
    recurse: true
    mode: 'u=rwX,g=rX,o=rX'
  with_items:
    - "{{ etebase__global_static_root }}"

- name: Print hint how to create admin User
  ansible.builtin.debug:
    # yamllint disable-line rule:line-length
    msg: "To create a admin user, run 'cd {{ etebase__user_home }}/etebase_{{ etebase_version_target }}; source {{ etebase__venv }}/bin/activate; python3 ./manage.py createsuperuser' as priviledged user."
